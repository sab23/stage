<?php

namespace Proxies\__CG__\ProjetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Projet extends \ProjetBundle\Entity\Projet implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'id', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'nomProjet', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'dateDebut', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'dateFinProjet', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'dateButoir', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'fonctionalitedev', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'hebergement', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'preprod', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'url'];
        }

        return ['__isInitialized__', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'id', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'nomProjet', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'dateDebut', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'dateFinProjet', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'dateButoir', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'fonctionalitedev', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'hebergement', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'preprod', '' . "\0" . 'ProjetBundle\\Entity\\Projet' . "\0" . 'url'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Projet $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomProjet($nomProjet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomProjet', [$nomProjet]);

        return parent::setNomProjet($nomProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomProjet', []);

        return parent::getNomProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDebut($dateDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDebut', [$dateDebut]);

        return parent::setDateDebut($dateDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDebut', []);

        return parent::getDateDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFinProjet($dateFinProjet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFinProjet', [$dateFinProjet]);

        return parent::setDateFinProjet($dateFinProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFinProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFinProjet', []);

        return parent::getDateFinProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateButoir($dateButoir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateButoir', [$dateButoir]);

        return parent::setDateButoir($dateButoir);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateButoir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateButoir', []);

        return parent::getDateButoir();
    }

    /**
     * {@inheritDoc}
     */
    public function setFonctionalitedev($fonctionalitedev)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFonctionalitedev', [$fonctionalitedev]);

        return parent::setFonctionalitedev($fonctionalitedev);
    }

    /**
     * {@inheritDoc}
     */
    public function getFonctionalitedev()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFonctionalitedev', []);

        return parent::getFonctionalitedev();
    }

    /**
     * {@inheritDoc}
     */
    public function setHebergement($hebergement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHebergement', [$hebergement]);

        return parent::setHebergement($hebergement);
    }

    /**
     * {@inheritDoc}
     */
    public function getHebergement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHebergement', []);

        return parent::getHebergement();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreprod($preprod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreprod', [$preprod]);

        return parent::setPreprod($preprod);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreprod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreprod', []);

        return parent::getPreprod();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

}
